name: Temporary RDP Tunnel with ngrok

on:
  push:
  workflow_dispatch:

jobs:
  tunnel:
    runs-on: windows-latest

    steps:
      - name: Enable Remote Desktop and Configure Firewall
        run: |
          # تمكين RDP وتكوين جدار الحماية للسماح بالاتصال
          Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server' -Name "fDenyTSConnections" -Value 0
          Enable-NetFirewallRule -DisplayGroup "Remote Desktop"
          Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server\WinStations\RDP-Tcp' -Name "UserAuthentication" -Value 1
          Set-LocalUser -Name "runneradmin" -Password (ConvertTo-SecureString -AsPlainText "P@ssw0rd!" -Force)
      
      - name: Download ngrok
        run: |
          Invoke-WebRequest https://bin.equinox.io/c/bNyj1mQVY4c/ngrok-v3-stable-windows-amd64.zip -OutFile ngrok.zip
      
      - name: Extract ngrok
        run: Expand-Archive ngrok.zip
      
      - name: Authenticate ngrok
        run: .\ngrok\ngrok.exe authtoken $Env:NGROK_AUTH_TOKEN
        env:
          NGROK_AUTH_TOKEN: ${{ secrets.NGROK_AUTH_TOKEN }}
      
      - name: Start ngrok Tunnel for RDP and Retrieve URL
        run: |
          # تشغيل النفق في الخلفية على منفذ 3389
          Start-Process -FilePath ".\ngrok\ngrok.exe" -ArgumentList "tcp", "3389" -WindowStyle Hidden
          # الانتظار قليلاً للسماح للنفق بالبدء
          Start-Sleep -Seconds 10
          # استرجاع رابط النفق العام من واجهة ngrok المحلية
          $tunnels = Invoke-RestMethod -Uri http://127.0.0.1:4040/api/tunnels
          $publicUrl = $tunnels.tunnels[0].public_url
          Write-Output "Temporary Tunnel URL: $publicUrl"
      
      - name: Keep Tunnel Alive
        run: Start-Sleep -Seconds 2147483
